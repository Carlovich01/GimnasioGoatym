### YamlMime:ManagedReference
items:
- uid: Gimnasio.Datos.DPlanes
  commentId: T:Gimnasio.Datos.DPlanes
  id: DPlanes
  parent: Gimnasio.Datos
  children:
  - Gimnasio.Datos.DPlanes.Actualizar(Gimnasio.Entidades.Planes)
  - Gimnasio.Datos.DPlanes.Eliminar(System.UInt32)
  - Gimnasio.Datos.DPlanes.Insertar(Gimnasio.Entidades.Planes)
  - Gimnasio.Datos.DPlanes.Listar
  - Gimnasio.Datos.DPlanes.ListarPorDuracion(System.UInt32)
  - Gimnasio.Datos.DPlanes.ListarPorNombre(System.String)
  - Gimnasio.Datos.DPlanes.ListarPorPrecio(System.Decimal)
  langs:
  - csharp
  - vb
  name: DPlanes
  nameWithType: DPlanes
  fullName: Gimnasio.Datos.DPlanes
  type: Class
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: DPlanes
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 12
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Clase de acceso a datos para la gestión de planes de membresía.

    Hereda de <xref href="Gimnasio.Datos.ConexionBase" data-throw-if-not-resolved="false"></xref> y utiliza la entidad <xref href="Gimnasio.Entidades.Planes" data-throw-if-not-resolved="false"></xref>.

    Proporciona métodos CRUD y de búsqueda para la tabla <code>planes_membresia</code>.
  remarks: Los diccionarios se utilizan para asociar los parametros de la consulta con los parametros del metodo
  example: []
  syntax:
    content: 'public class DPlanes : ConexionBase'
    content.vb: Public Class DPlanes Inherits ConexionBase
  inheritance:
  - System.Object
  - Gimnasio.Datos.ConexionBase
  inheritedMembers:
  - Gimnasio.Datos.ConexionBase.connectionString
  - Gimnasio.Datos.ConexionBase.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Gimnasio.Datos.ConexionBase.ExecuteNonQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.Finalize
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Gimnasio.Datos.DPlanes.Listar
  commentId: M:Gimnasio.Datos.DPlanes.Listar
  id: Listar
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: Listar()
  nameWithType: DPlanes.Listar()
  fullName: Gimnasio.Datos.DPlanes.Listar()
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: Listar
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 19
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: Ejecuta una consulta SQL (SELECT) que obtiene todos los planes de la base de datos ordenados por la última modificación.
  example: []
  syntax:
    content: public DataTable Listar()
    return:
      type: System.Data.DataTable
      description: DataTable con los datos de los planes.
    content.vb: Public Function Listar() As DataTable
  overload: Gimnasio.Datos.DPlanes.Listar*
- uid: Gimnasio.Datos.DPlanes.Insertar(Gimnasio.Entidades.Planes)
  commentId: M:Gimnasio.Datos.DPlanes.Insertar(Gimnasio.Entidades.Planes)
  id: Insertar(Gimnasio.Entidades.Planes)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: Insertar(Planes)
  nameWithType: DPlanes.Insertar(Planes)
  fullName: Gimnasio.Datos.DPlanes.Insertar(Gimnasio.Entidades.Planes)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: Insertar
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 36
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Utiliza los datos proporcionados en la instancia de Planes recibida para ejecutar una sentencia SQL(INSERT), la cual inserta el nuevo plan. 

    Los valores nulos se almacenan como NULL en la base de datos.

    Se lanza una excepción si el nombre del plan ya existe.
  example: []
  syntax:
    content: public void Insertar(Planes Obj)
    parameters:
    - id: Obj
      type: Gimnasio.Entidades.Planes
      description: Instancia de <xref href="Gimnasio.Entidades.Planes" data-throw-if-not-resolved="false"></xref> a insertar.
    content.vb: Public Sub Insertar(Obj As Planes)
  overload: Gimnasio.Datos.DPlanes.Insertar*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Se lanza si el nombre del plan ya existe o por errores de la base de datos.
- uid: Gimnasio.Datos.DPlanes.Actualizar(Gimnasio.Entidades.Planes)
  commentId: M:Gimnasio.Datos.DPlanes.Actualizar(Gimnasio.Entidades.Planes)
  id: Actualizar(Gimnasio.Entidades.Planes)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: Actualizar(Planes)
  nameWithType: DPlanes.Actualizar(Planes)
  fullName: Gimnasio.Datos.DPlanes.Actualizar(Gimnasio.Entidades.Planes)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: Actualizar
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 63
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Recibe una instancia de Planes y ejecuta una sentencia SQL (UPDATE) que actualiza los campos de un registro de plan existente que 

    corresponde al id de la instancia.

    Los valores nulos se almacenan como NULL en la base de datos.

    Se lanza una excepción si el nombre del plan ya existe.
  example: []
  syntax:
    content: public void Actualizar(Planes Obj)
    parameters:
    - id: Obj
      type: Gimnasio.Entidades.Planes
      description: Instancia de <xref href="Gimnasio.Entidades.Planes" data-throw-if-not-resolved="false"></xref> con los datos actualizados.
    content.vb: Public Sub Actualizar(Obj As Planes)
  overload: Gimnasio.Datos.DPlanes.Actualizar*
- uid: Gimnasio.Datos.DPlanes.Eliminar(System.UInt32)
  commentId: M:Gimnasio.Datos.DPlanes.Eliminar(System.UInt32)
  id: Eliminar(System.UInt32)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: Eliminar(uint)
  nameWithType: DPlanes.Eliminar(uint)
  fullName: Gimnasio.Datos.DPlanes.Eliminar(uint)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: Eliminar
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 90
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Recibe el id del plan a eliminar y ejecuta una sentencia SQL (DELETE) que elimina el registro de plan correspondiente.

    Si el plan tiene membresías asociadas y existe una restricción de clave foránea, captura la excepción y lanza un mensaje específico.
  example: []
  syntax:
    content: public void Eliminar(uint id)
    parameters:
    - id: id
      type: System.UInt32
      description: Identificador único del plan a eliminar.
    content.vb: Public Sub Eliminar(id As UInteger)
  overload: Gimnasio.Datos.DPlanes.Eliminar*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Se lanza si el plan tiene membresías asociadas o por errores de la base de datos.
  nameWithType.vb: DPlanes.Eliminar(UInteger)
  fullName.vb: Gimnasio.Datos.DPlanes.Eliminar(UInteger)
  name.vb: Eliminar(UInteger)
- uid: Gimnasio.Datos.DPlanes.ListarPorNombre(System.String)
  commentId: M:Gimnasio.Datos.DPlanes.ListarPorNombre(System.String)
  id: ListarPorNombre(System.String)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: ListarPorNombre(string)
  nameWithType: DPlanes.ListarPorNombre(string)
  fullName: Gimnasio.Datos.DPlanes.ListarPorNombre(string)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: ListarPorNombre
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 114
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Recibe el nombre o parte del nombre del plan a buscar y ejecuta una sentencia SQL (SELECT) que busca coincidencias 

    en la base de datos. Utiliza la cláusula LIKE para permitir coincidencias parciales.
  example: []
  syntax:
    content: public DataTable ListarPorNombre(string nombre)
    parameters:
    - id: nombre
      type: System.String
      description: Nombre o parte del nombre del plan a buscar.
    return:
      type: System.Data.DataTable
      description: DataTable con los resultados de la búsqueda.
    content.vb: Public Function ListarPorNombre(nombre As String) As DataTable
  overload: Gimnasio.Datos.DPlanes.ListarPorNombre*
  nameWithType.vb: DPlanes.ListarPorNombre(String)
  fullName.vb: Gimnasio.Datos.DPlanes.ListarPorNombre(String)
  name.vb: ListarPorNombre(String)
- uid: Gimnasio.Datos.DPlanes.ListarPorDuracion(System.UInt32)
  commentId: M:Gimnasio.Datos.DPlanes.ListarPorDuracion(System.UInt32)
  id: ListarPorDuracion(System.UInt32)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: ListarPorDuracion(uint)
  nameWithType: DPlanes.ListarPorDuracion(uint)
  fullName: Gimnasio.Datos.DPlanes.ListarPorDuracion(uint)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: ListarPorDuracion
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 133
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Recibe la duración en días del plan a buscar y ejecuta una sentencia SQL (SELECT) que busca coincidencias 

    en la base de datos. Utiliza la cláusula WHERE para filtrar por duración exacta.
  example: []
  syntax:
    content: public DataTable ListarPorDuracion(uint duracion)
    parameters:
    - id: duracion
      type: System.UInt32
      description: Duración en días del plan.
    return:
      type: System.Data.DataTable
      description: DataTable con los resultados de la búsqueda.
    content.vb: Public Function ListarPorDuracion(duracion As UInteger) As DataTable
  overload: Gimnasio.Datos.DPlanes.ListarPorDuracion*
  nameWithType.vb: DPlanes.ListarPorDuracion(UInteger)
  fullName.vb: Gimnasio.Datos.DPlanes.ListarPorDuracion(UInteger)
  name.vb: ListarPorDuracion(UInteger)
- uid: Gimnasio.Datos.DPlanes.ListarPorPrecio(System.Decimal)
  commentId: M:Gimnasio.Datos.DPlanes.ListarPorPrecio(System.Decimal)
  id: ListarPorPrecio(System.Decimal)
  parent: Gimnasio.Datos.DPlanes
  langs:
  - csharp
  - vb
  name: ListarPorPrecio(decimal)
  nameWithType: DPlanes.ListarPorPrecio(decimal)
  fullName: Gimnasio.Datos.DPlanes.ListarPorPrecio(decimal)
  type: Method
  source:
    remote:
      path: Gimnasio.Datos/DPlanes.vb
      branch: main
      repo: https://github.com/Carlovich01/GimnasioGoatym
    id: ListarPorPrecio
    path: ../Gimnasio.Datos/DPlanes.vb
    startLine: 152
  assemblies:
  - Gimnasio.Datos
  namespace: Gimnasio.Datos
  summary: >-
    Recibe el precio del plan a buscar y ejecuta una sentencia SQL (SELECT) que busca coincidencias 

    en la base de datos. Utiliza la cláusula WHERE para filtrar por precio exacto.
  example: []
  syntax:
    content: public DataTable ListarPorPrecio(decimal precio)
    parameters:
    - id: precio
      type: System.Decimal
      description: Precio del plan.
    return:
      type: System.Data.DataTable
      description: DataTable con los resultados de la búsqueda.
    content.vb: Public Function ListarPorPrecio(precio As Decimal) As DataTable
  overload: Gimnasio.Datos.DPlanes.ListarPorPrecio*
  nameWithType.vb: DPlanes.ListarPorPrecio(Decimal)
  fullName.vb: Gimnasio.Datos.DPlanes.ListarPorPrecio(Decimal)
  name.vb: ListarPorPrecio(Decimal)
references:
- uid: Gimnasio.Datos.ConexionBase
  commentId: T:Gimnasio.Datos.ConexionBase
  parent: Gimnasio.Datos
  href: Gimnasio.Datos.ConexionBase.html
  name: ConexionBase
  nameWithType: ConexionBase
  fullName: Gimnasio.Datos.ConexionBase
- uid: Gimnasio.Entidades.Planes
  commentId: T:Gimnasio.Entidades.Planes
  parent: Gimnasio.Entidades
  href: Gimnasio.Entidades.Planes.html
  name: Planes
  nameWithType: Planes
  fullName: Gimnasio.Entidades.Planes
- uid: Gimnasio.Datos
  commentId: N:Gimnasio.Datos
  isExternal: true
  href: Gimnasio.html
  name: Gimnasio.Datos
  nameWithType: Gimnasio.Datos
  fullName: Gimnasio.Datos
  spec.csharp:
  - uid: Gimnasio
    name: Gimnasio
    isExternal: true
    href: Gimnasio.html
  - name: .
  - uid: Gimnasio.Datos
    name: Datos
    href: Gimnasio.Datos.html
  spec.vb:
  - uid: Gimnasio
    name: Gimnasio
    isExternal: true
    href: Gimnasio.html
  - name: .
  - uid: Gimnasio.Datos
    name: Datos
    href: Gimnasio.Datos.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Gimnasio.Datos.ConexionBase.connectionString
  commentId: F:Gimnasio.Datos.ConexionBase.connectionString
  parent: Gimnasio.Datos.ConexionBase
  href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_connectionString
  name: connectionString
  nameWithType: ConexionBase.connectionString
  fullName: Gimnasio.Datos.ConexionBase.connectionString
- uid: Gimnasio.Datos.ConexionBase.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Gimnasio.Datos.ConexionBase.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Gimnasio.Datos.ConexionBase
  isExternal: true
  href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: ExecuteQuery(string, Dictionary<string, object>)
  nameWithType: ConexionBase.ExecuteQuery(string, Dictionary<string, object>)
  fullName: Gimnasio.Datos.ConexionBase.ExecuteQuery(string, System.Collections.Generic.Dictionary<string, object>)
  nameWithType.vb: ConexionBase.ExecuteQuery(String, Dictionary(Of String, Object))
  fullName.vb: Gimnasio.Datos.ConexionBase.ExecuteQuery(String, System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: ExecuteQuery(String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: Gimnasio.Datos.ConexionBase.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: ExecuteQuery
    href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Gimnasio.Datos.ConexionBase.ExecuteQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: ExecuteQuery
    href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Gimnasio.Datos.ConexionBase.ExecuteNonQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Gimnasio.Datos.ConexionBase.ExecuteNonQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Gimnasio.Datos.ConexionBase
  isExternal: true
  href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteNonQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: ExecuteNonQuery(string, Dictionary<string, object>)
  nameWithType: ConexionBase.ExecuteNonQuery(string, Dictionary<string, object>)
  fullName: Gimnasio.Datos.ConexionBase.ExecuteNonQuery(string, System.Collections.Generic.Dictionary<string, object>)
  nameWithType.vb: ConexionBase.ExecuteNonQuery(String, Dictionary(Of String, Object))
  fullName.vb: Gimnasio.Datos.ConexionBase.ExecuteNonQuery(String, System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: ExecuteNonQuery(String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: Gimnasio.Datos.ConexionBase.ExecuteNonQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: ExecuteNonQuery
    href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteNonQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: Gimnasio.Datos.ConexionBase.ExecuteNonQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: ExecuteNonQuery
    href: Gimnasio.Datos.ConexionBase.html#Gimnasio_Datos_ConexionBase_ExecuteNonQuery_System_String_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.finalize
  name: Finalize()
  nameWithType: object.Finalize()
  fullName: object.Finalize()
  nameWithType.vb: Object.Finalize()
  fullName.vb: Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.finalize
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.finalize
  - name: (
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Gimnasio.Entidades
  commentId: N:Gimnasio.Entidades
  isExternal: true
  href: Gimnasio.html
  name: Gimnasio.Entidades
  nameWithType: Gimnasio.Entidades
  fullName: Gimnasio.Entidades
  spec.csharp:
  - uid: Gimnasio
    name: Gimnasio
    isExternal: true
    href: Gimnasio.html
  - name: .
  - uid: Gimnasio.Entidades
    name: Entidades
    href: Gimnasio.Entidades.html
  spec.vb:
  - uid: Gimnasio
    name: Gimnasio
    isExternal: true
    href: Gimnasio.html
  - name: .
  - uid: Gimnasio.Entidades
    name: Entidades
    href: Gimnasio.Entidades.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Gimnasio.Datos.DPlanes.Listar*
  commentId: Overload:Gimnasio.Datos.DPlanes.Listar
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_Listar
  name: Listar
  nameWithType: DPlanes.Listar
  fullName: Gimnasio.Datos.DPlanes.Listar
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Gimnasio.Datos.DPlanes.Insertar*
  commentId: Overload:Gimnasio.Datos.DPlanes.Insertar
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_Insertar_Gimnasio_Entidades_Planes_
  name: Insertar
  nameWithType: DPlanes.Insertar
  fullName: Gimnasio.Datos.DPlanes.Insertar
- uid: Gimnasio.Datos.DPlanes.Actualizar*
  commentId: Overload:Gimnasio.Datos.DPlanes.Actualizar
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_Actualizar_Gimnasio_Entidades_Planes_
  name: Actualizar
  nameWithType: DPlanes.Actualizar
  fullName: Gimnasio.Datos.DPlanes.Actualizar
- uid: Gimnasio.Datos.DPlanes.Eliminar*
  commentId: Overload:Gimnasio.Datos.DPlanes.Eliminar
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_Eliminar_System_UInt32_
  name: Eliminar
  nameWithType: DPlanes.Eliminar
  fullName: Gimnasio.Datos.DPlanes.Eliminar
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Gimnasio.Datos.DPlanes.ListarPorNombre*
  commentId: Overload:Gimnasio.Datos.DPlanes.ListarPorNombre
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_ListarPorNombre_System_String_
  name: ListarPorNombre
  nameWithType: DPlanes.ListarPorNombre
  fullName: Gimnasio.Datos.DPlanes.ListarPorNombre
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Gimnasio.Datos.DPlanes.ListarPorDuracion*
  commentId: Overload:Gimnasio.Datos.DPlanes.ListarPorDuracion
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_ListarPorDuracion_System_UInt32_
  name: ListarPorDuracion
  nameWithType: DPlanes.ListarPorDuracion
  fullName: Gimnasio.Datos.DPlanes.ListarPorDuracion
- uid: Gimnasio.Datos.DPlanes.ListarPorPrecio*
  commentId: Overload:Gimnasio.Datos.DPlanes.ListarPorPrecio
  href: Gimnasio.Datos.DPlanes.html#Gimnasio_Datos_DPlanes_ListarPorPrecio_System_Decimal_
  name: ListarPorPrecio
  nameWithType: DPlanes.ListarPorPrecio
  fullName: Gimnasio.Datos.DPlanes.ListarPorPrecio
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
